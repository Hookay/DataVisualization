<html>

  <head>
    <script src='https://d3js.org/d3.v7.min.js'></script>
  </head>


  <body>



    <script>
      //Exercise 18:Extend the example, so the ‘bar chart’ data is displayed from an external file (e.g., csv).  


      let dataM = 'https://raw.githubusercontent.com/Hookay/DataVisualization/main/LAB1/CSV/nu.csv'


      //const data = [50, 400, 300, 900, 250, 1000]
      const u = []
      d3.csv(dataM, function(data, i) {
      
        //make data numerical
        data.nu=+data.nu
        
        //push it into an array
        u.push(data.nu)
      
      }).then(function(data) {
      		
        data=u;
        
        const width = 500;
        const barHeight = 20;
        const margin = 1;

        //console.log(data)

        var scale = d3.scaleLinear()
          .domain([d3.min(data), d3.max(data)])
          .range([50, 500]);

        var svg = d3.select("body")
          .append("svg")
          .attr("width", width)
          .attr("height", barHeight * data.length);

        var g = svg.selectAll("g")
          .data(data)
          .enter()
          .append("g")
          .attr("transform", function(d, i) {
            return "translate(0," + i * barHeight + ")";
          });

        g.append("rect")
          .attr("width", function(d) {
            return scale(d);
          })
          .attr('fill', function(d, i) {
            if (d < 100) {
              return 'green';
            }
            if (d > 500) {
              return 'red';
            } else {
              return 'blue';
            }
          })
          .attr("height", barHeight - margin)

        g.append("text")
          .attr("x", function(d) {
            return (scale(d));
          })
          .attr("y", barHeight / 2)
          .attr("dy", ".35em")
          .style('text-anchor', 'end')
          .style("fill", "white")
          .text(function(d) {
            return d;
          });


      });

    </script>
  </body>

</html>
