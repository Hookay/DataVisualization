<html>

  <head>
    <script src='https://d3js.org/d3.v7.min.js'></script>
  </head>


  <body>



    <script>
      /*
 
Exercise 29: Take one of the d3 color methods and apply it to the line chart example (from earlier). 
 */


      // Set Dimensions 
      const xSize = 600;
      const ySize = 600;
      const margin = 40;
      const xMax = xSize - margin * 2;
      const yMax = ySize - margin * 2;
      var myColor0 = d3.scaleSequential().domain([1, 10]).interpolator(d3.interpolateViridis);
      var cols = [myColor0];

      // Create Random Points 
      const numPoints = 100;
      const data = [];
      for (let i = 0; i < numPoints; i++) {
        data.push({
          x: i / 100,
          y: Math.sin(6.2 * i / 100)
        });
      }
      //call function
      drawFunction(data);



      //Make it a function

      function drawFunction(data) {
        // Get the 'limits' of the data - the full extent (mins and max) 
        // so the plotted data fits perfectly  
        const xExtent = d3.extent(data, d => {
          return d.x
        });
        const yExtent = d3.extent(data, d => {
          return d.y
        });

        // Append SVG Object to the Page 
        const svg = d3.select("body")
          .append("svg")
          .attr('width', xSize)
          .attr('height', ySize)
          .append("g")
          .attr("transform", "translate(" + margin + "," + margin + ")");

        // X Axis 
        const x = d3.scaleLinear()
          .domain([xExtent[0], xExtent[1]])
          .range([0, xMax]);

        // bottom 
        svg.append("g")
          .attr("transform", "translate(0," + yMax + ")")
          .call(d3.axisBottom(x))
          .attr('color', 'green'); // make bottom axis green 

        // top 
        svg.append("g")
          .call(d3.axisTop(x));

        // Y Axis 
        const y = d3.scaleLinear()
          .domain([yExtent[0], yExtent[1]])
          .range([yMax, 0]);

        // left y axis 
        svg.append("g")
          .call(d3.axisLeft(y));

        // right y axis 
        svg.append("g")
          .attr("transform", `translate(${yMax},0)`)
          .call(d3.axisRight(y));

        svg.selectAll("dot")
          .data(data)
          .enter()
          .append("circle")
          .attr("cx", function(d) {

            return x(d.x)
          })
          .attr("cy", function(d) {
            return y(d.y)
          })
          .attr("r", 5)
          .style("fill", function(d,i){      
           return cols[0](i);
          });


      }

    </script>
  </body>

</html>
