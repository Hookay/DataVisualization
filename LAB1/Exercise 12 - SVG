<!DOCTYPE html>
<html lang="en">

  <head>
    <script src='https://d3js.org/d3.v7.min.js'></script>

  </head>

  <body>

    <script src='https://d3js.org/d3.v7.min.js'></script>

    <script>
      /*Exercise 12: Build an SVG scene which is created from an external file.   You need to create a csv with the 
information about the shapes.  You should include columns in your csv file for the type of shape (circle, rectangle, 
ellipse, line), its dimensions and position, and color.  Your program reads the data and creates and displays the 
shapes to the screen.  */



      let rectangle = 'https://raw.githubusercontent.com/Hookay/DataVisualization/main/LAB1/CSV/shapes.csv';



      //Create SVG element 
      var svg = d3.select("body")
        .append("svg")
        .attr("width", 400)
        .attr("height", 400)
        .style("border", '1px solid yellow');



      d3.csv(rectangle, function(data) {
        //console.log(data)
        //display the circle
        if (data.shape == "circle"){ 
          svg.append(data.shape)
          .attr("cx", parseInt(data.cx)) 
          .attr("cy", parseInt(data.cy))
          .attr("r", parseInt(data.r))
          .attr("fill", data.color)
        //display rectangle
        }else if (data.shape == "rect") { 
          svg.append(data.shape)
            .attr("x", parseInt(data.x)) 
            .attr("y", parseInt(data.y))
            .attr("width", parseInt(data.width))
            .attr("height", parseInt(data.height))
            .attr("fill", data.color)
        //display ellipse
        }else if (data.shape == "ellipse") { 
          svg.append(data.shape)
            .attr("rx", parseInt(data.rx)) 
            .attr("ry", parseInt(data.ry))
            .attr("width", parseInt(data.width))
            .attr("height", parseInt(data.height))
            .attr("fill", data.color)
         //display line   
        }else if (data.shape == "line") { 
          svg.append(data.shape)
            .attr("x", parseInt(data.x)) 
            .attr("y", parseInt(data.y))
            .attr("x2", parseInt(data.x2))
            .attr("y2", parseInt(data.y2))
            .attr("stroke", data.color)
        }

      })

    </script>
  </body>

</html>
